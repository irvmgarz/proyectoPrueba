Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDEQUAL
    ARRAY
    ASIGNACION
    CASE
    COMENTARIO
    CORCHETEDER
    CORCHETEIZ
    CURRENT
    DECREMENTO
    DEQUEUE
    DOSPUNTOS
    ELSE
    ELSEIF
    ENQUEUE
    FOR
    IF
    INCREMENTO
    LLAVEDER
    NEXT
    POP
    PUNTO
    REWIND
    SIGNOID
    SPLSTACK
    SWITCH
    VALID

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> asignacion
Rule 2     sentencias -> echo
Rule 3     sentencias -> funcion
Rule 4     sentencias -> while
Rule 5     sentencias -> print
Rule 6     sentencias -> operadorAritmetico
Rule 7     sentencias -> return
Rule 8     sentencias -> estructuras
Rule 9     valores -> valor
Rule 10    valores -> valor COMA valores
Rule 11    NUMERO -> ENTERO
Rule 12    NUMERO -> FLOTANTE
Rule 13    valor -> NUMERO
Rule 14    valor -> CADENA
Rule 15    valor -> BOOLEAN
Rule 16    valor -> IDENTIFICADOR
Rule 17    comparadorNum -> MAYORQUE
Rule 18    comparadorNum -> MAYORIGUALQUE
Rule 19    comparadorNum -> MENORQUE
Rule 20    comparadorNum -> MENORIGUALQUE
Rule 21    comparador -> IDENTICO
Rule 22    comparador -> NOIDENTICO
Rule 23    comparador -> IGUAL
Rule 24    variables -> NUMERO
Rule 25    variables -> IDENTIFICADOR
Rule 26    comparaciones -> comparacion
Rule 27    comparaciones -> comparacion operadores comparaciones
Rule 28    comparacion -> variables comparadorNum variables
Rule 29    comparacion -> valor comparador valor
Rule 30    echo -> ECHO valores PUNTOCOMA
Rule 31    while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ
Rule 32    operadores -> OPERADOR
Rule 33    operadores -> AND
Rule 34    operadores -> OR
Rule 35    asignacion -> IDENTIFICADOR ASIGNAR valor
Rule 36    print -> PRINT PARENIZ valores PARENDER PUNTOCOMA
Rule 37    print -> PRINT valor PUNTOCOMA
Rule 38    print -> PRINT PARENIZ PARENDER PUNTOCOMA
Rule 39    operadorAritmetico -> SUMA
Rule 40    operadorAritmetico -> RESTA
Rule 41    operadorAritmetico -> MULT
Rule 42    operadorAritmetico -> DIVISION
Rule 43    operadorAritmetico -> DIVISIONENTERA
Rule 44    operadorAritmetico -> MODULO
Rule 45    operadorAritmetico -> POTENCIA
Rule 46    funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
Rule 47    parametro -> IDENTIFICADOR
Rule 48    parametro -> IDENTIFICADOR COMA parametro
Rule 49    funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 50    funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 51    return -> RETURN IDENTIFICADOR PUNTOCOMA
Rule 52    estructuras -> queue
Rule 53    estructuras -> stack
Rule 54    queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
Rule 55    stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA

Terminals, with rules where they appear

AND                  : 33
ANDEQUAL             : 
ARRAY                : 
ASIGNACION           : 
ASIGNAR              : 35 50 54
BOOLEAN              : 15
CADENA               : 14
CASE                 : 
COMA                 : 10 48
COMENTARIO           : 
CORCHETEDER          : 
CORCHETEIZ           : 
CURRENT              : 
DECREMENTO           : 
DEQUEUE              : 
DIVISION             : 42
DIVISIONENTERA       : 43
DOSPUNTOS            : 
ECHO                 : 30
ELSE                 : 
ELSEIF               : 
ENQUEUE              : 
ENTERO               : 11
FLECHASIMPLE         : 55
FLOTANTE             : 12
FOR                  : 
FUNCTION             : 46
IDENTICO             : 21
IDENTIFICADOR        : 16 25 35 47 48 50 51 54 55
IF                   : 
IGUAL                : 23
INCREMENTO           : 
LLAVEDER             : 
LLAVEIZ              : 31 46
MAYORIGUALQUE        : 18
MAYORQUE             : 17
MENORIGUALQUE        : 20
MENORQUE             : 19
MODULO               : 44
MULT                 : 41
NAMEFUNCTION         : 46 49 50
NEW                  : 54
NEXT                 : 
NOIDENTICO           : 22
OPERADOR             : 32
OR                   : 34
PARENDER             : 31 36 38 46 49 50 54 55
PARENIZ              : 31 36 38 46 49 50 54 55
POP                  : 
POTENCIA             : 45
PRINT                : 36 37 38
PUNTO                : 
PUNTOCOMA            : 30 36 37 38 49 50 51 54 55
PUSH                 : 55
QUEUE                : 54
RESTA                : 40
RETURN               : 51
REWIND               : 
SIGNOID              : 
SPLSTACK             : 
SUMA                 : 39
SWITCH               : 
VALID                : 
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

NUMERO               : 13 24
asignacion           : 1
comparacion          : 26 27
comparaciones        : 27 31
comparador           : 29
comparadorNum        : 28
echo                 : 2
estructuras          : 8
funcion              : 3
operadorAritmetico   : 6
operadores           : 27
parametro            : 46 48 49 50
print                : 5
queue                : 52
return               : 7
sentencias           : 0
stack                : 53
valor                : 9 10 29 29 35 37 55
valores              : 10 30 36
variables            : 28 28
while                : 4

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . asignacion
    (2) sentencias -> . echo
    (3) sentencias -> . funcion
    (4) sentencias -> . while
    (5) sentencias -> . print
    (6) sentencias -> . operadorAritmetico
    (7) sentencias -> . return
    (8) sentencias -> . estructuras
    (35) asignacion -> . IDENTIFICADOR ASIGNAR valor
    (30) echo -> . ECHO valores PUNTOCOMA
    (46) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (49) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (50) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (31) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (36) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (37) print -> . PRINT valor PUNTOCOMA
    (38) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (39) operadorAritmetico -> . SUMA
    (40) operadorAritmetico -> . RESTA
    (41) operadorAritmetico -> . MULT
    (42) operadorAritmetico -> . DIVISION
    (43) operadorAritmetico -> . DIVISIONENTERA
    (44) operadorAritmetico -> . MODULO
    (45) operadorAritmetico -> . POTENCIA
    (51) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (52) estructuras -> . queue
    (53) estructuras -> . stack
    (54) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (55) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 10
    ECHO            shift and go to state 11
    FUNCTION        shift and go to state 12
    NAMEFUNCTION    shift and go to state 13
    WHILE           shift and go to state 14
    PRINT           shift and go to state 15
    SUMA            shift and go to state 16
    RESTA           shift and go to state 17
    MULT            shift and go to state 18
    DIVISION        shift and go to state 19
    DIVISIONENTERA  shift and go to state 20
    MODULO          shift and go to state 21
    POTENCIA        shift and go to state 22
    RETURN          shift and go to state 23

    sentencias                     shift and go to state 1
    asignacion                     shift and go to state 2
    echo                           shift and go to state 3
    funcion                        shift and go to state 4
    while                          shift and go to state 5
    print                          shift and go to state 6
    operadorAritmetico             shift and go to state 7
    return                         shift and go to state 8
    estructuras                    shift and go to state 9
    queue                          shift and go to state 24
    stack                          shift and go to state 25

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> asignacion .

    $end            reduce using rule 1 (sentencias -> asignacion .)


state 3

    (2) sentencias -> echo .

    $end            reduce using rule 2 (sentencias -> echo .)


state 4

    (3) sentencias -> funcion .

    $end            reduce using rule 3 (sentencias -> funcion .)


state 5

    (4) sentencias -> while .

    $end            reduce using rule 4 (sentencias -> while .)


state 6

    (5) sentencias -> print .

    $end            reduce using rule 5 (sentencias -> print .)


state 7

    (6) sentencias -> operadorAritmetico .

    $end            reduce using rule 6 (sentencias -> operadorAritmetico .)


state 8

    (7) sentencias -> return .

    $end            reduce using rule 7 (sentencias -> return .)


state 9

    (8) sentencias -> estructuras .

    $end            reduce using rule 8 (sentencias -> estructuras .)


state 10

    (35) asignacion -> IDENTIFICADOR . ASIGNAR valor
    (50) funcion -> IDENTIFICADOR . ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (54) queue -> IDENTIFICADOR . ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (55) stack -> IDENTIFICADOR . FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA

    ASIGNAR         shift and go to state 26
    FLECHASIMPLE    shift and go to state 27


state 11

    (30) echo -> ECHO . valores PUNTOCOMA
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    IDENTIFICADOR   shift and go to state 33
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    valores                        shift and go to state 28
    valor                          shift and go to state 29
    NUMERO                         shift and go to state 30

state 12

    (46) funcion -> FUNCTION . NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ

    NAMEFUNCTION    shift and go to state 36


state 13

    (49) funcion -> NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 37


state 14

    (31) while -> WHILE . PARENIZ comparaciones PARENDER LLAVEIZ

    PARENIZ         shift and go to state 38


state 15

    (36) print -> PRINT . PARENIZ valores PARENDER PUNTOCOMA
    (37) print -> PRINT . valor PUNTOCOMA
    (38) print -> PRINT . PARENIZ PARENDER PUNTOCOMA
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    PARENIZ         shift and go to state 39
    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    IDENTIFICADOR   shift and go to state 33
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    valor                          shift and go to state 40
    NUMERO                         shift and go to state 30

state 16

    (39) operadorAritmetico -> SUMA .

    $end            reduce using rule 39 (operadorAritmetico -> SUMA .)


state 17

    (40) operadorAritmetico -> RESTA .

    $end            reduce using rule 40 (operadorAritmetico -> RESTA .)


state 18

    (41) operadorAritmetico -> MULT .

    $end            reduce using rule 41 (operadorAritmetico -> MULT .)


state 19

    (42) operadorAritmetico -> DIVISION .

    $end            reduce using rule 42 (operadorAritmetico -> DIVISION .)


state 20

    (43) operadorAritmetico -> DIVISIONENTERA .

    $end            reduce using rule 43 (operadorAritmetico -> DIVISIONENTERA .)


state 21

    (44) operadorAritmetico -> MODULO .

    $end            reduce using rule 44 (operadorAritmetico -> MODULO .)


state 22

    (45) operadorAritmetico -> POTENCIA .

    $end            reduce using rule 45 (operadorAritmetico -> POTENCIA .)


state 23

    (51) return -> RETURN . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 41


state 24

    (52) estructuras -> queue .

    $end            reduce using rule 52 (estructuras -> queue .)


state 25

    (53) estructuras -> stack .

    $end            reduce using rule 53 (estructuras -> stack .)


state 26

    (35) asignacion -> IDENTIFICADOR ASIGNAR . valor
    (50) funcion -> IDENTIFICADOR ASIGNAR . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (54) queue -> IDENTIFICADOR ASIGNAR . NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    NAMEFUNCTION    shift and go to state 43
    NEW             shift and go to state 44
    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    IDENTIFICADOR   shift and go to state 33
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    valor                          shift and go to state 42
    NUMERO                         shift and go to state 30

state 27

    (55) stack -> IDENTIFICADOR FLECHASIMPLE . PUSH PARENIZ valor PARENDER PUNTOCOMA

    PUSH            shift and go to state 45


state 28

    (30) echo -> ECHO valores . PUNTOCOMA

    PUNTOCOMA       shift and go to state 46


state 29

    (9) valores -> valor .
    (10) valores -> valor . COMA valores

    PUNTOCOMA       reduce using rule 9 (valores -> valor .)
    PARENDER        reduce using rule 9 (valores -> valor .)
    COMA            shift and go to state 47


state 30

    (13) valor -> NUMERO .

    COMA            reduce using rule 13 (valor -> NUMERO .)
    PUNTOCOMA       reduce using rule 13 (valor -> NUMERO .)
    $end            reduce using rule 13 (valor -> NUMERO .)
    PARENDER        reduce using rule 13 (valor -> NUMERO .)
    OPERADOR        reduce using rule 13 (valor -> NUMERO .)
    AND             reduce using rule 13 (valor -> NUMERO .)
    OR              reduce using rule 13 (valor -> NUMERO .)


state 31

    (14) valor -> CADENA .

    COMA            reduce using rule 14 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 14 (valor -> CADENA .)
    $end            reduce using rule 14 (valor -> CADENA .)
    IDENTICO        reduce using rule 14 (valor -> CADENA .)
    NOIDENTICO      reduce using rule 14 (valor -> CADENA .)
    IGUAL           reduce using rule 14 (valor -> CADENA .)
    PARENDER        reduce using rule 14 (valor -> CADENA .)
    OPERADOR        reduce using rule 14 (valor -> CADENA .)
    AND             reduce using rule 14 (valor -> CADENA .)
    OR              reduce using rule 14 (valor -> CADENA .)


state 32

    (15) valor -> BOOLEAN .

    COMA            reduce using rule 15 (valor -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 15 (valor -> BOOLEAN .)
    $end            reduce using rule 15 (valor -> BOOLEAN .)
    IDENTICO        reduce using rule 15 (valor -> BOOLEAN .)
    NOIDENTICO      reduce using rule 15 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 15 (valor -> BOOLEAN .)
    PARENDER        reduce using rule 15 (valor -> BOOLEAN .)
    OPERADOR        reduce using rule 15 (valor -> BOOLEAN .)
    AND             reduce using rule 15 (valor -> BOOLEAN .)
    OR              reduce using rule 15 (valor -> BOOLEAN .)


state 33

    (16) valor -> IDENTIFICADOR .

    COMA            reduce using rule 16 (valor -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 16 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 16 (valor -> IDENTIFICADOR .)
    PARENDER        reduce using rule 16 (valor -> IDENTIFICADOR .)
    OPERADOR        reduce using rule 16 (valor -> IDENTIFICADOR .)
    AND             reduce using rule 16 (valor -> IDENTIFICADOR .)
    OR              reduce using rule 16 (valor -> IDENTIFICADOR .)


state 34

    (11) NUMERO -> ENTERO .

    COMA            reduce using rule 11 (NUMERO -> ENTERO .)
    PUNTOCOMA       reduce using rule 11 (NUMERO -> ENTERO .)
    $end            reduce using rule 11 (NUMERO -> ENTERO .)
    MAYORQUE        reduce using rule 11 (NUMERO -> ENTERO .)
    MAYORIGUALQUE   reduce using rule 11 (NUMERO -> ENTERO .)
    MENORQUE        reduce using rule 11 (NUMERO -> ENTERO .)
    MENORIGUALQUE   reduce using rule 11 (NUMERO -> ENTERO .)
    IDENTICO        reduce using rule 11 (NUMERO -> ENTERO .)
    NOIDENTICO      reduce using rule 11 (NUMERO -> ENTERO .)
    IGUAL           reduce using rule 11 (NUMERO -> ENTERO .)
    PARENDER        reduce using rule 11 (NUMERO -> ENTERO .)
    OPERADOR        reduce using rule 11 (NUMERO -> ENTERO .)
    AND             reduce using rule 11 (NUMERO -> ENTERO .)
    OR              reduce using rule 11 (NUMERO -> ENTERO .)


state 35

    (12) NUMERO -> FLOTANTE .

    COMA            reduce using rule 12 (NUMERO -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 12 (NUMERO -> FLOTANTE .)
    $end            reduce using rule 12 (NUMERO -> FLOTANTE .)
    MAYORQUE        reduce using rule 12 (NUMERO -> FLOTANTE .)
    MAYORIGUALQUE   reduce using rule 12 (NUMERO -> FLOTANTE .)
    MENORQUE        reduce using rule 12 (NUMERO -> FLOTANTE .)
    MENORIGUALQUE   reduce using rule 12 (NUMERO -> FLOTANTE .)
    IDENTICO        reduce using rule 12 (NUMERO -> FLOTANTE .)
    NOIDENTICO      reduce using rule 12 (NUMERO -> FLOTANTE .)
    IGUAL           reduce using rule 12 (NUMERO -> FLOTANTE .)
    PARENDER        reduce using rule 12 (NUMERO -> FLOTANTE .)
    OPERADOR        reduce using rule 12 (NUMERO -> FLOTANTE .)
    AND             reduce using rule 12 (NUMERO -> FLOTANTE .)
    OR              reduce using rule 12 (NUMERO -> FLOTANTE .)


state 36

    (46) funcion -> FUNCTION NAMEFUNCTION . PARENIZ parametro PARENDER LLAVEIZ

    PARENIZ         shift and go to state 48


state 37

    (49) funcion -> NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (47) parametro -> . IDENTIFICADOR
    (48) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 50

    parametro                      shift and go to state 49

state 38

    (31) while -> WHILE PARENIZ . comparaciones PARENDER LLAVEIZ
    (26) comparaciones -> . comparacion
    (27) comparaciones -> . comparacion operadores comparaciones
    (28) comparacion -> . variables comparadorNum variables
    (29) comparacion -> . valor comparador valor
    (24) variables -> . NUMERO
    (25) variables -> . IDENTIFICADOR
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 56
    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    comparaciones                  shift and go to state 51
    comparacion                    shift and go to state 52
    variables                      shift and go to state 53
    valor                          shift and go to state 54
    NUMERO                         shift and go to state 55

state 39

    (36) print -> PRINT PARENIZ . valores PARENDER PUNTOCOMA
    (38) print -> PRINT PARENIZ . PARENDER PUNTOCOMA
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 58
    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    IDENTIFICADOR   shift and go to state 33
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    valores                        shift and go to state 57
    valor                          shift and go to state 29
    NUMERO                         shift and go to state 30

state 40

    (37) print -> PRINT valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 59


state 41

    (51) return -> RETURN IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 60


state 42

    (35) asignacion -> IDENTIFICADOR ASIGNAR valor .

    $end            reduce using rule 35 (asignacion -> IDENTIFICADOR ASIGNAR valor .)


state 43

    (50) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 61


state 44

    (54) queue -> IDENTIFICADOR ASIGNAR NEW . QUEUE PARENIZ PARENDER PUNTOCOMA

    QUEUE           shift and go to state 62


state 45

    (55) stack -> IDENTIFICADOR FLECHASIMPLE PUSH . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 63


state 46

    (30) echo -> ECHO valores PUNTOCOMA .

    $end            reduce using rule 30 (echo -> ECHO valores PUNTOCOMA .)


state 47

    (10) valores -> valor COMA . valores
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    IDENTIFICADOR   shift and go to state 33
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    valor                          shift and go to state 29
    valores                        shift and go to state 64
    NUMERO                         shift and go to state 30

state 48

    (46) funcion -> FUNCTION NAMEFUNCTION PARENIZ . parametro PARENDER LLAVEIZ
    (47) parametro -> . IDENTIFICADOR
    (48) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 50

    parametro                      shift and go to state 65

state 49

    (49) funcion -> NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 66


state 50

    (47) parametro -> IDENTIFICADOR .
    (48) parametro -> IDENTIFICADOR . COMA parametro

    PARENDER        reduce using rule 47 (parametro -> IDENTIFICADOR .)
    COMA            shift and go to state 67


state 51

    (31) while -> WHILE PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 68


state 52

    (26) comparaciones -> comparacion .
    (27) comparaciones -> comparacion . operadores comparaciones
    (32) operadores -> . OPERADOR
    (33) operadores -> . AND
    (34) operadores -> . OR

    PARENDER        reduce using rule 26 (comparaciones -> comparacion .)
    OPERADOR        shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72

    operadores                     shift and go to state 69

state 53

    (28) comparacion -> variables . comparadorNum variables
    (17) comparadorNum -> . MAYORQUE
    (18) comparadorNum -> . MAYORIGUALQUE
    (19) comparadorNum -> . MENORQUE
    (20) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 74
    MAYORIGUALQUE   shift and go to state 75
    MENORQUE        shift and go to state 76
    MENORIGUALQUE   shift and go to state 77

    comparadorNum                  shift and go to state 73

state 54

    (29) comparacion -> valor . comparador valor
    (21) comparador -> . IDENTICO
    (22) comparador -> . NOIDENTICO
    (23) comparador -> . IGUAL

    IDENTICO        shift and go to state 79
    NOIDENTICO      shift and go to state 80
    IGUAL           shift and go to state 81

    comparador                     shift and go to state 78

state 55

    (24) variables -> NUMERO .
    (13) valor -> NUMERO .

    MAYORQUE        reduce using rule 24 (variables -> NUMERO .)
    MAYORIGUALQUE   reduce using rule 24 (variables -> NUMERO .)
    MENORQUE        reduce using rule 24 (variables -> NUMERO .)
    MENORIGUALQUE   reduce using rule 24 (variables -> NUMERO .)
    IDENTICO        reduce using rule 13 (valor -> NUMERO .)
    NOIDENTICO      reduce using rule 13 (valor -> NUMERO .)
    IGUAL           reduce using rule 13 (valor -> NUMERO .)


state 56

    (25) variables -> IDENTIFICADOR .
    (16) valor -> IDENTIFICADOR .

    MAYORQUE        reduce using rule 25 (variables -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 25 (variables -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 25 (variables -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 25 (variables -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 16 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 16 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 16 (valor -> IDENTIFICADOR .)


state 57

    (36) print -> PRINT PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 82


state 58

    (38) print -> PRINT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 83


state 59

    (37) print -> PRINT valor PUNTOCOMA .

    $end            reduce using rule 37 (print -> PRINT valor PUNTOCOMA .)


state 60

    (51) return -> RETURN IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 51 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)


state 61

    (50) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (47) parametro -> . IDENTIFICADOR
    (48) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 50

    parametro                      shift and go to state 84

state 62

    (54) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 85


state 63

    (55) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ . valor PARENDER PUNTOCOMA
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    IDENTIFICADOR   shift and go to state 33
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    valor                          shift and go to state 86
    NUMERO                         shift and go to state 30

state 64

    (10) valores -> valor COMA valores .

    PUNTOCOMA       reduce using rule 10 (valores -> valor COMA valores .)
    PARENDER        reduce using rule 10 (valores -> valor COMA valores .)


state 65

    (46) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro . PARENDER LLAVEIZ

    PARENDER        shift and go to state 87


state 66

    (49) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 88


state 67

    (48) parametro -> IDENTIFICADOR COMA . parametro
    (47) parametro -> . IDENTIFICADOR
    (48) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 50

    parametro                      shift and go to state 89

state 68

    (31) while -> WHILE PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 90


state 69

    (27) comparaciones -> comparacion operadores . comparaciones
    (26) comparaciones -> . comparacion
    (27) comparaciones -> . comparacion operadores comparaciones
    (28) comparacion -> . variables comparadorNum variables
    (29) comparacion -> . valor comparador valor
    (24) variables -> . NUMERO
    (25) variables -> . IDENTIFICADOR
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 56
    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    comparacion                    shift and go to state 52
    comparaciones                  shift and go to state 91
    variables                      shift and go to state 53
    valor                          shift and go to state 54
    NUMERO                         shift and go to state 55

state 70

    (32) operadores -> OPERADOR .

    IDENTIFICADOR   reduce using rule 32 (operadores -> OPERADOR .)
    CADENA          reduce using rule 32 (operadores -> OPERADOR .)
    BOOLEAN         reduce using rule 32 (operadores -> OPERADOR .)
    ENTERO          reduce using rule 32 (operadores -> OPERADOR .)
    FLOTANTE        reduce using rule 32 (operadores -> OPERADOR .)


state 71

    (33) operadores -> AND .

    IDENTIFICADOR   reduce using rule 33 (operadores -> AND .)
    CADENA          reduce using rule 33 (operadores -> AND .)
    BOOLEAN         reduce using rule 33 (operadores -> AND .)
    ENTERO          reduce using rule 33 (operadores -> AND .)
    FLOTANTE        reduce using rule 33 (operadores -> AND .)


state 72

    (34) operadores -> OR .

    IDENTIFICADOR   reduce using rule 34 (operadores -> OR .)
    CADENA          reduce using rule 34 (operadores -> OR .)
    BOOLEAN         reduce using rule 34 (operadores -> OR .)
    ENTERO          reduce using rule 34 (operadores -> OR .)
    FLOTANTE        reduce using rule 34 (operadores -> OR .)


state 73

    (28) comparacion -> variables comparadorNum . variables
    (24) variables -> . NUMERO
    (25) variables -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 94
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    variables                      shift and go to state 92
    NUMERO                         shift and go to state 93

state 74

    (17) comparadorNum -> MAYORQUE .

    IDENTIFICADOR   reduce using rule 17 (comparadorNum -> MAYORQUE .)
    ENTERO          reduce using rule 17 (comparadorNum -> MAYORQUE .)
    FLOTANTE        reduce using rule 17 (comparadorNum -> MAYORQUE .)


state 75

    (18) comparadorNum -> MAYORIGUALQUE .

    IDENTIFICADOR   reduce using rule 18 (comparadorNum -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 18 (comparadorNum -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 18 (comparadorNum -> MAYORIGUALQUE .)


state 76

    (19) comparadorNum -> MENORQUE .

    IDENTIFICADOR   reduce using rule 19 (comparadorNum -> MENORQUE .)
    ENTERO          reduce using rule 19 (comparadorNum -> MENORQUE .)
    FLOTANTE        reduce using rule 19 (comparadorNum -> MENORQUE .)


state 77

    (20) comparadorNum -> MENORIGUALQUE .

    IDENTIFICADOR   reduce using rule 20 (comparadorNum -> MENORIGUALQUE .)
    ENTERO          reduce using rule 20 (comparadorNum -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 20 (comparadorNum -> MENORIGUALQUE .)


state 78

    (29) comparacion -> valor comparador . valor
    (13) valor -> . NUMERO
    (14) valor -> . CADENA
    (15) valor -> . BOOLEAN
    (16) valor -> . IDENTIFICADOR
    (11) NUMERO -> . ENTERO
    (12) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 31
    BOOLEAN         shift and go to state 32
    IDENTIFICADOR   shift and go to state 33
    ENTERO          shift and go to state 34
    FLOTANTE        shift and go to state 35

    valor                          shift and go to state 95
    NUMERO                         shift and go to state 30

state 79

    (21) comparador -> IDENTICO .

    CADENA          reduce using rule 21 (comparador -> IDENTICO .)
    BOOLEAN         reduce using rule 21 (comparador -> IDENTICO .)
    IDENTIFICADOR   reduce using rule 21 (comparador -> IDENTICO .)
    ENTERO          reduce using rule 21 (comparador -> IDENTICO .)
    FLOTANTE        reduce using rule 21 (comparador -> IDENTICO .)


state 80

    (22) comparador -> NOIDENTICO .

    CADENA          reduce using rule 22 (comparador -> NOIDENTICO .)
    BOOLEAN         reduce using rule 22 (comparador -> NOIDENTICO .)
    IDENTIFICADOR   reduce using rule 22 (comparador -> NOIDENTICO .)
    ENTERO          reduce using rule 22 (comparador -> NOIDENTICO .)
    FLOTANTE        reduce using rule 22 (comparador -> NOIDENTICO .)


state 81

    (23) comparador -> IGUAL .

    CADENA          reduce using rule 23 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 23 (comparador -> IGUAL .)
    IDENTIFICADOR   reduce using rule 23 (comparador -> IGUAL .)
    ENTERO          reduce using rule 23 (comparador -> IGUAL .)
    FLOTANTE        reduce using rule 23 (comparador -> IGUAL .)


state 82

    (36) print -> PRINT PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 96


state 83

    (38) print -> PRINT PARENIZ PARENDER PUNTOCOMA .

    $end            reduce using rule 38 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)


state 84

    (50) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 97


state 85

    (54) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 98


state 86

    (55) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 99


state 87

    (46) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 100


state 88

    (49) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    $end            reduce using rule 49 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 89

    (48) parametro -> IDENTIFICADOR COMA parametro .

    PARENDER        reduce using rule 48 (parametro -> IDENTIFICADOR COMA parametro .)


state 90

    (31) while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .

    $end            reduce using rule 31 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)


state 91

    (27) comparaciones -> comparacion operadores comparaciones .

    PARENDER        reduce using rule 27 (comparaciones -> comparacion operadores comparaciones .)


state 92

    (28) comparacion -> variables comparadorNum variables .

    OPERADOR        reduce using rule 28 (comparacion -> variables comparadorNum variables .)
    AND             reduce using rule 28 (comparacion -> variables comparadorNum variables .)
    OR              reduce using rule 28 (comparacion -> variables comparadorNum variables .)
    PARENDER        reduce using rule 28 (comparacion -> variables comparadorNum variables .)


state 93

    (24) variables -> NUMERO .

    OPERADOR        reduce using rule 24 (variables -> NUMERO .)
    AND             reduce using rule 24 (variables -> NUMERO .)
    OR              reduce using rule 24 (variables -> NUMERO .)
    PARENDER        reduce using rule 24 (variables -> NUMERO .)


state 94

    (25) variables -> IDENTIFICADOR .

    OPERADOR        reduce using rule 25 (variables -> IDENTIFICADOR .)
    AND             reduce using rule 25 (variables -> IDENTIFICADOR .)
    OR              reduce using rule 25 (variables -> IDENTIFICADOR .)
    PARENDER        reduce using rule 25 (variables -> IDENTIFICADOR .)


state 95

    (29) comparacion -> valor comparador valor .

    OPERADOR        reduce using rule 29 (comparacion -> valor comparador valor .)
    AND             reduce using rule 29 (comparacion -> valor comparador valor .)
    OR              reduce using rule 29 (comparacion -> valor comparador valor .)
    PARENDER        reduce using rule 29 (comparacion -> valor comparador valor .)


state 96

    (36) print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .

    $end            reduce using rule 36 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)


state 97

    (50) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 101


state 98

    (54) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 102


state 99

    (55) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 103


state 100

    (46) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .

    $end            reduce using rule 46 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)


state 101

    (50) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    $end            reduce using rule 50 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 102

    (54) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .

    $end            reduce using rule 54 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)


state 103

    (55) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .

    $end            reduce using rule 55 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)

